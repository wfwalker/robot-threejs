// ////////////////////////////////////////////////////////////////////////////// ////////////////////////////////////////////////////////////////////////////// ////////////////////////////////////////////////////////////////////////////// /////////////////////////       ROBOT PARTS              ///////////////////// ////////////////////////////////////////////////////////////////////////////// ////////////////////////////////////////////////////////////////////////////// ////////////////////////////////////////////////////////////////////////////#include "metals.inc"#include "shapes.inc"#include "colors.inc"#include "shapes.inc"#include "stones.inc"#include "glass.inc"#include "debug.inc"#include "woods.inc"#declare texture_set=1;#if (texture_set = 0) // MONOTEXTURE//#declare MonoTexture = texture { pigment { White } }#declare MonoTexture = texture { T_Stone3 }#declare My_Rubber = texture { MonoTexture }#declare My_Wood5 = texture { MonoTexture }#declare My_Chrome_4A = texture { MonoTexture }#declare My_Chrome_4C = texture { MonoTexture }#declare My_Brass_3A = texture { MonoTexture }#declare My_Brass_3B = texture { MonoTexture }#declare My_Brass_4A = texture { MonoTexture }#declare My_Brass_4B = texture { MonoTexture }#declare My_BumpBrass_4A = texture { MonoTexture }#declare My_BumpChrome_2A = texture { MonoTexture }#declare My_BumpRed = texture { MonoTexture }#declare My_Eye = texture { MonoTexture }#declare My_Glass = texture { MonoTexture }#declare My_BumpBlack = texture { MonoTexture }#declare My_Black = texture { MonoTexture }#end#if (texture_set = 1) // MATTE//#declare AmbientLevel = 0.0; // FOR NIGHT#declare AmbientLevel = 0.3; // FOR DAY#declare My_Robot_Finish  =finish {    ambient AmbientLevel    brilliance 0.5    diffuse 0.1    metallic    specular 0.20    roughness 0.02    reflection 0.02}#declare My_Chrome_4A = texture { T_Chrome_4A finish { ambient AmbientLevel } }#declare My_Chrome_4C = texture { T_Chrome_4C finish { ambient AmbientLevel } }#declare My_Brass_3A = texture { T_Brass_3A finish { ambient AmbientLevel } }#declare My_Brass_3B = texture { T_Brass_3B finish { ambient AmbientLevel } }#declare My_Brass_4A = texture { T_Brass_4A finish { ambient AmbientLevel } }#declare My_Brass_4B = texture { T_Brass_4B finish { ambient AmbientLevel } }#declare My_BumpBrass_4A = texture { pigment{ P_Brass4 } normal { dents 0.6 scale 0.02 } finish { ambient AmbientLevel } }#declare My_BumpChrome_2A = texture { pigment{ P_Brass2 } normal { dents 0.6 scale 0.02 } finish { ambient AmbientLevel } }#declare My_BumpRed = texture { pigment { color Red } normal { dents 0.1 scale 0.02 } finish { My_Robot_Finish ambient AmbientLevel } }#declare My_Eye = texture { pigment { Red } finish { ambient 1.1 } }#declare My_Glass = texture { T_Old_Glass finish { ambient AmbientLevel } }#declare My_Rubber = texture { pigment { Gray10 } finish { ambient AmbientLevel } }#declare My_Wood5 = texture { T_Wood5 finish { ambient AmbientLevel }  }#declare My_Black = texture { pigment { color Black } finish { My_Robot_Finish ambient AmbientLevel } }#declare My_BumpBlack = texture { pigment { color Black } normal { dents 0.1 scale 0.02 } finish { My_Robot_Finish ambient AmbientLevel } }#end#if (texture_set = 2) // SHINY#declare AmbientLevel = 0.0; // FOR NIGHT//#declare AmbientLevel = 0.4; // FOR DAY#declare My_Rubber = texture { pigment { Gray10 } finish { ambient AmbientLevel } }#declare My_Wood5 = texture { T_Wood5 finish { ambient AmbientLevel }  }#declare My_Chrome_4A = texture { T_Chrome_4A finish { ambient AmbientLevel } }#declare My_Chrome_4C = texture { T_Chrome_4C finish { ambient AmbientLevel } }#declare My_Brass_3A = texture { T_Brass_3A finish { ambient AmbientLevel } }#declare My_Brass_3B = texture { T_Brass_3B finish { ambient AmbientLevel } }#declare My_Brass_4A = texture { T_Brass_4A finish { ambient AmbientLevel } }#declare My_Brass_4B = texture { T_Brass_4B finish { ambient AmbientLevel } }#declare My_BumpBrass_4A = texture { pigment{ P_Brass4 } normal { dents scale 0.01 } finish { F_MetalA ambient AmbientLevel } }#declare My_BumpChrome_2A = texture { pigment{ P_Brass2 } normal { dents scale 0.01 } finish { F_MetalA ambient AmbientLevel } }#declare My_BumpRed = texture { pigment { color Red } normal { dents scale 0.01 } finish { F_MetalA ambient AmbientLevel } }#declare My_Eye = texture { pigment { Red } finish { ambient 1.1 } }#declare My_Glass = texture { T_Old_Glass finish { ambient AmbientLevel } }#declare My_Black = texture { pigment { color Black } finish { ambient AmbientLevel } }#declare My_BumpBlack = texture { pigment { color Black } normal { dents scale 0.01 } finish { F_MetalA ambient AmbientLevel } }#end// //////////////////////////#macro Tank(height, tankRadius)union {	sphere { height * y, tankRadius texture { My_BumpBrass_4A } }	cylinder { height * y, 0, tankRadius texture { My_BumpBrass_4A } }	sphere { 0, tankRadius texture { My_BumpBrass_4A } }	torus { tankRadius, 0.05 translate height * y texture { My_Chrome_4A } }	torus { tankRadius, 0.05 texture { My_Chrome_4A } }}#end// ////////////////////////////#declare LimbMount = intersection {	union {		box { -1, 1 scale <0.20,  0.03, 100> }		box { -1, 1 scale <0.03,  0.20, 100> }		cylinder { -1*z, z, 0.07  scale <1, 1, 100> }	}	cylinder { -1*z, z, 0.15 }  	texture { My_Brass_4A }}// //////////////////////////////#declare MountingBolt = union {	cylinder { <0, 0, -1>, <0, 0, 1>, 0.12 texture { My_Rubber } }	cylinder { <0, 0, -1.1>, <0, 0, 1.1>, 0.10 texture { My_Brass_4A } }};// ///////////////////////////////#macro MountingBracket(longWay, center, boltDir)difference{	union {		cylinder { center + (boltDir * 0.1), center + - (boltDir * 0.1), 0.15 } // transverse hollow cylinder (for bolt)		cylinder { center, center + longWay * 0.1, 0.10 } // cylinder along piston (mounts to inner chrome shaft)	}	cylinder { center + (boltDir * 0.5), center - (boltDir * 0.5), 0.12 } // hollow out space for gasket and bolt	texture { My_Brass_3B }}#end// ////////////////////////////#macro Piston(top, bottom, boltDir, radiusScale)#local piston_start=0.3;#local piston_stop=1.8;#local longWay=vnormalize(bottom - top);#local ortho=vcross(boltDir, longWay);//#debug concat("top ", vstr(3, top, ", ", 0, 1), "  bottom ", vstr(3, bottom, ", ", 0, 1), "\n") //#debug concat("longway ", vstr(3, longWay, ", ", 0, 1), "  boltDir ", vstr(3, boltDir, ", ", 0, 1), "  ortho ", vstr(3, ortho, ", ", 0, 1), "\n") union {MountingBracket(longWay, top, boltDir)cylinder { top + longWay * 0.75, top + longWay * 0.75 + 0.27 * boltDir * radiusScale, 0.08 texture { My_Brass_4B } }cylinder { top + longWay * 0.50, top + longWay * 0.50 + 0.27 * boltDir * radiusScale, 0.08 texture { My_Brass_4B } }// outer wooddifference {	cylinder {longWay * piston_start, longWay * piston_stop, radiusScale * 0.25 translate top}	cylinder {top, bottom, radiusScale * 0.20}	texture { My_BumpRed }}//inner rubberdifference { 	cylinder {longWay * (piston_start - 0.01), longWay * (piston_stop + 0.01), radiusScale * 0.18 translate top}	cylinder {top, bottom, 0.08 }	texture { My_Rubber }}// rings around outer wooddifference { 	cylinder {longWay * (piston_start - 0.01), longWay * (piston_start + 0.04), radiusScale * 0.27 translate top}	cylinder {top, bottom, radiusScale * 0.18}	texture { My_Brass_3B }}difference { 	cylinder {longWay * (piston_stop - 0.04), longWay * (piston_stop + 0.01), radiusScale * 0.27 translate top}	cylinder {top, bottom, radiusScale * 0.18}	texture { My_Brass_3B }}// inner pistoncylinder {top + longWay * 0.15, bottom - longWay * 0.15, 0.08	texture { My_Chrome_4C }}MountingBracket(-longWay, bottom, boltDir)}#end// /////////////////////////////// PLATE#declare PointFivePlate = intersection {	box { <-2, -1, -0.5>, <2, 1, 0.5> }	union {		cylinder { < 0.25,    0, -1>, < 0.25,   0, 1>, 0.2 }		cylinder { <-0.25,    0, -1>, <-0.25,   0, 1>, 0.2 }		box      { < 0.25, -0.2, -1>, <-0.25, 0.2, 1> }	}	texture { My_BumpBlack }};#declare PointSixPlate = intersection {	box { <-2, -1, -0.5>, <2, 1, 0.5> }	union {		cylinder { < 0.30,    0, -1>, < 0.30,   0, 1>, 0.2 }		cylinder { <-0.30,    0, -1>, <-0.30,   0, 1>, 0.2 }		box      { < 0.30, -0.2, -1>, <-0.30, 0.2, 1> }	}	texture { My_BumpBlack }};// /////////////////////////////////////////////////////////////////////////////////////// LEG#declare Foot = union {	intersection {		box { <-0.5, 0, -0.5>, <1.5, 0.5, 0.5> }		cylinder { <-5, -0.6, 0>, <5, -0.6, 0>, 1 }		texture { My_BumpBlack }	}	box { <-0.53, 0.10, -0.53>, <1.53, 0.13, 0.53> texture { My_Brass_4A } }};#macro Leg(knee_theta, boltDir)union {// hip mounting boltsobject { MountingBolt scale <1, 1, 0.42> translate <-0.3, 0, 0>}object { MountingBolt scale <1, 1, 0.42> translate < 0.3, 0, 0> }// hip platesobject { PointSixPlate scale <1, 1, 0.26> }object { PointSixPlate scale <1, 1, 0.04> translate  0.39*z }object { PointSixPlate scale <1, 1, 0.04> translate -0.39*z }Piston(-0.3 * x - 0.25 * boltDir, vrotate(-0.25 * x - 0.25 * boltDir, knee_theta*z) - 3*y, -boltDir, 0.8)Piston( 0.3 * x - 0.25 * boltDir, vrotate( 0.25 * x - 0.25 * boltDir, knee_theta*z) - 3*y, -boltDir, 0.8)Piston(-0.3 * x + 0.25 * boltDir, vrotate(-0.25 * x + 0.25 * boltDir, knee_theta*z) - 3*y,  boltDir, 0.8)Piston( 0.3 * x + 0.25 * boltDir, vrotate( 0.25 * x + 0.25 * boltDir, knee_theta*z) - 3*y,  boltDir, 0.8)// shin unitunion {//knee platesobject { PointFivePlate scale <1, 1, 0.04> translate  0.13*z}object { PointFivePlate scale <1, 1, 0.04> translate -0.13*z}object { PointFivePlate scale <1, 1, 0.04> translate  0.38*z}object { PointFivePlate scale <1, 1, 0.04> translate -0.38*z}// knee mounting boltsobject { MountingBolt scale <1, 1, 0.42> translate < 0.25, 0, 0>  }object { MountingBolt scale <1, 1, 0.42> translate <-0.25, 0, 0> }//shin pistonsPiston(<-0.25, 0, 0>, <-0.2, -2.35, 0>, boltDir, 0.8)Piston(< 0.25, 0, 0>, < 0.2, -2.35, 0>, boltDir, 0.7)//ankle platescylinder { <0, -2.5, -0.12>, <0, -2.5, -0.2>, 0.4 texture { My_BumpBlack } }cylinder { <0, -2.5, 0.12>, <0, -2.5, 0.2>, 0.4 texture { My_BumpBlack } }// ankle mounting boltsobject { MountingBolt scale <1, 1, 0.22> translate <-0.2, -2.35, 0> }object { MountingBolt scale <1, 1, 0.22> translate < 0.2, -2.35, 0> }	// footobject {Foot translate <-0.2, -3, 0> }rotate knee_theta * z translate <0, -3, 0>}}#end// /////////////////////////////////////////////////////////// ARM 1#macro Arm(elbo_theta, boltDir)union {// shoulder platesobject { PointSixPlate scale <1, 1, 0.26> }object { PointSixPlate scale <1, 1, 0.04> translate  0.38*z }object { PointSixPlate scale <1, 1, 0.04> translate -0.38*z }// shoulder mounting boltobject { MountingBolt scale <1, 1, 0.42> translate <-0.3, 0, 0> }object { MountingBolt scale <1, 1, 0.42> translate < 0.3, 0, 0> }// upper armPiston(-0.3 * x - 0.25 * boltDir, vrotate(-0.25 * x - 0.25 * boltDir, elbo_theta*z) - 2.5*y, -boltDir, 0.6)Piston( 0.3 * x - 0.25 * boltDir, vrotate( 0.25 * x - 0.25 * boltDir, elbo_theta*z) - 2.5*y, -boltDir, 0.6)Piston(-0.3 * x + 0.25 * boltDir, vrotate(-0.25 * x + 0.25 * boltDir, elbo_theta*z) - 2.5*y,  boltDir, 0.6)Piston( 0.3 * x + 0.25 * boltDir, vrotate( 0.25 * x + 0.25 * boltDir, elbo_theta*z) - 2.5*y,  boltDir, 0.6)// forearmunion{	// elbow mounting plates	object { PointFivePlate scale <1, 1, 0.04> translate  0.12*z }	object { PointFivePlate scale <1, 1, 0.04> translate -0.12*z }	object { PointFivePlate scale <1, 1, 0.04> translate  0.38*z }	object { PointFivePlate scale <1, 1, 0.04> translate -0.38*z }	// elbow mounting bolt	object { MountingBolt scale <1, 1, 0.42> translate <-0.25, 0, 0> }	object { MountingBolt scale <1, 1, 0.42> translate < 0.25, 0, 0> }	//forearm	Piston(<-0.25, 0, 0>, <-0.15, -2.5, 0>, boltDir, 0.6)	Piston(< 0.25, 0, 0>, < 0.15, -2.5, 0>, boltDir, 0.6)	// hand mounting bolt	object { MountingBolt scale <1, 1, 0.22> translate <-0.15, -2.5, 0> }	object { MountingBolt scale <1, 1, 0.22> translate < 0.15, -2.5, 0> }	// hand	box { <-0.45, -2.3, -0.2>, <0.45, -3.3, -0.11> texture { My_BumpBlack } }	box { <-0.45, -2.3,  0.2>, <0.45, -3.3,  0.11> texture { My_BumpBlack } }	rotate elbo_theta * z translate <0, -2.5, 0>}}#end// //////////////////////////// ARM 2#declare Rotor = union {	object { #Round_Cylinder_Union(<0,0,-0.25>,<0,0,-0.1>,0.5, 0.05) texture { My_BumpBlack } } // shoulder	object { #Round_Cylinder_Union(<0,0,0.1>,<0,0,0.25>,0.5, 0.05) texture { My_BumpBlack } } // shoulder	cylinder { -0.1 * z,  0.1 * z, 0.35 texture { My_Brass_4A } }};#declare Forearm2 = union {	// elbo	object { Rotor scale <0.9, 0.9, 1.0> }	object { MountingBolt scale <1, 1, 0.3> }		// piston mounting plates	object { Round_Box_Union(<-1,-1,-1>, <1,1,1>, 0.3) scale <0.3, 0.3, 0.05> translate < 0.2, -0.5, -0.17> texture { My_BumpRed } }	object { Round_Box_Union(<-1,-1,-1>, <1,1,1>, 0.3) scale <0.3, 0.3, 0.05> translate < 0.2, -0.5,  0.17> texture { My_BumpRed } }	// forearm	object { Round_Box_Union(<-1,-1,-1>, <1,1,1>, 0.5) scale <0.09, 1.25, 0.15> translate <-0.15, -1.25, 0> texture { My_Chrome_4A } }	object { Round_Box_Union(<-1,-1,-1>, <1,1,1>, 0.5) scale <0.09, 1.25, 0.15> translate < 0.15, -1.25, 0> texture { My_Chrome_4A } }	cylinder { -1.00 * y, -1.10 * y, 0.23 texture { My_Brass_3A } } // band	cylinder { -1.20 * y, -1.30 * y, 0.23 texture { My_Brass_3A } } // band	cylinder { -1.80 * y, -1.90 * y, 0.23 texture { My_Brass_3A } } // band	cylinder { -2.00 * y, -2.10 * y, 0.23 texture { My_Brass_3A } } // band	// hand mounting bolt	object { MountingBolt scale <1, 1, 0.22> translate <-0.15, -2.5, 0> }	object { MountingBolt scale <1, 1, 0.22> translate < 0.15, -2.5, 0> }	// hand	box { <-0.45, -2.3, -0.2>, <0.45, -3.3, -0.11> texture { My_BumpBlack } }	box { <-0.45, -2.3,  0.2>, <0.45, -3.3,  0.11> texture { My_BumpBlack } }}#declare Upperarm2 = union {	// shoulder rotor	object { Rotor scale <1.4, 1.4, 1> }	// upper arm	object { Round_Box_Union(<-1,-1,-1>, <1,1,1>, 0.5) scale <0.1, 1.25, 0.2> translate <-0.20, -1.25, 0> texture { My_Chrome_4A } }	object { Round_Box_Union(<-1,-1,-1>, <1,1,1>, 0.5) scale <0.1, 1.25, 0.2> translate < 0.20, -1.25, 0> texture { My_Chrome_4A } }		cylinder { -0.60 * y, -0.70 * y, 0.27 texture { My_Brass_3A } } // band	cylinder { -0.80 * y, -0.90 * y, 0.27 texture { My_Brass_3A } } // band	cylinder { -1.60 * y, -1.70 * y, 0.27 texture { My_Brass_3A } } // band	cylinder { -1.80 * y, -1.90 * y, 0.27 texture { My_Brass_3A } } // band	// piston mounting plates		object { Round_Box_Union(<-1,-1,-1>, <1,1,1>, 0.3) scale <0.3, 0.2, 0.05> translate < 0.7, 0, -0.17> texture { My_Black } }	object { Round_Box_Union(<-1,-1,-1>, <1,1,1>, 0.3) scale <0.3, 0.2, 0.05> translate < 0.7, 0,  0.17> texture { My_Black } }}#macro Arm2(elbo_theta, boltDir)union {	object { Forearm2 rotate elbo_theta * z translate -2.5 * y }	object { Upperarm2 }		// piston and mounting bolts	Piston(<0.85, 0, 0>, (-2.5*y + vrotate(<0.3, -0.5, 0>, elbo_theta * z)), boltDir, 0.7)	object { MountingBolt scale <1, 1, 0.25> translate (-2.5*y + vrotate(<0.3, -0.5, 0>, elbo_theta * z)) } 	object { MountingBolt scale <1, 1, 0.25> translate <0.85, 0, 0> }}	#end// /////////////////////////////////////////////////// LEG2#declare Shin2 = union {	object { Rotor scale <1.2, 1.2, 1.5> }	object { LimbMount scale <1, 1, 0.43> }	cylinder { -0.90 * y, -1.00 * y, 0.32 texture { My_Brass_3A } } // band	cylinder { -1.10 * y, -1.20 * y, 0.32 texture { My_Brass_3A } } // band	cylinder { -2.10 * y, -2.20 * y, 0.32 texture { My_Brass_3A } } // band	cylinder { -2.30 * y, -2.40 * y, 0.32 texture { My_Brass_3A } } // band	box { -1, 1 scale <0.15, 1.5, 0.15> translate <-0.25, -1.5, 0> texture { My_Chrome_4A } }	box { -1, 1 scale <0.15, 1.5, 0.15> translate < 0.25, -1.5, 0> texture { My_Chrome_4A } }	object { Foot translate -3*y }};#declare Thigh2 = union {	object { Rotor scale <1.5, 1.5, 1.5> }	cylinder { -1.10 * y, -1.20 * y, 0.30 texture { My_Brass_3A } } // band	cylinder { -1.30 * y, -1.40 * y, 0.30 texture { My_Brass_3A } } // band	cylinder { -1.90 * y, -2.00 * y, 0.30 texture { My_Brass_3A } } // band	cylinder { -2.10 * y, -2.20 * y, 0.30 texture { My_Brass_3A } } // band	box { -1, 1 scale <0.20, 1.5, 0.2> translate <-0.30, -1.5, 0> texture { My_Chrome_4A } }	box { -1, 1 scale <0.20, 1.5, 0.2> translate < 0.30, -1.5, 0> texture { My_Chrome_4A } }};#macro Leg2(knee_theta, boltDir)union {	object { LimbMount scale <1, 1, 0.9> translate <0, 0.2, 0> - 0.4 * boltDir }	object { Thigh2 translate 0.2*y }	object { Shin2 rotate knee_theta * z translate -3.0*y }	// inside piston and mounting bolts	Piston(<0, -0.3, 0> - 0.51 * boltDir, (-2.8*y + vrotate(<0, -0.4, 0> - 0.51 * boltDir, knee_theta * z)), boltDir, 0.7)	object { MountingBolt scale <1, 1, 0.12> translate (-2.8*y + vrotate(<0, -0.4, 0> - 0.51 * boltDir, knee_theta * z)) } 	object { MountingBolt scale <1, 1, 0.12> translate <0.0, -0.3, 0> - 0.51 * boltDir}		// outside piston and mounting bolts	//Piston(<0, -0.5, 0> + 0.51 * boltDir, (-3*y + vrotate(<0, -0.4, 0> + 0.51 * boltDir, knee_theta * z)), boltDir, 0.7)	//object { MountingBolt scale <1, 1, 0.12> translate (-3*y + vrotate(<0, -0.4, 0> + 0.51 * boltDir, knee_theta * z)) } 	//object { MountingBolt scale <1, 1, 0.12> translate <0.0, -0.5, 0> + 0.51 * boltDir}}#end// //////////////////////////////////// INSTRUMENTS#declare Nameplate = difference {	box {-1, 1 scale <0.5, 0.2, 0.01> texture { My_Brass_4A } }	union {		text { ttf "timrom.ttf" "Wm Walker Robotics" 10, 0  scale 0.1 translate <-0.45, 0, -0.5> }		text { ttf "timrom.ttf" "deus ex machina" 10, 0  scale 0.1 translate <-0.33, -0.1, -0.5> }	}};#macro Gauge(theta)union {	torus { 0.47, 0.05 rotate 90*z texture { My_Brass_4A } }	cylinder { -1*x, 1*x, 1 scale <0.02, 0.5, 0.5> pigment { image_map { gif "gauge2" } translate <0.5, 0.5, 0> rotate 270*y } }	cylinder { -1*x, 1*x, 1 scale <0.005, 0.47, 0.47> translate 0.042 * x texture { My_Glass } interior { I_Glass } }	union {		cylinder { -1*x, 1*x, 1 scale <0.04, 0.02, 0.02> }		cylinder { -1*y, 1*y, 1 scale <0.008, 0.2, 0.008> translate <0.03, 0.18, 0> }		cone {0, 1, 1*y, 0 scale <0.02, 0.08, 0.02> translate <0.03, 0.32, 0> }		rotate theta * x		pigment { color Black }	}}#end#declare Button = union {	cylinder { -1*x, 1*x, 1 scale <0.01, 0.16, 0.16> texture { My_Brass_4A } }	difference {		cylinder { -1*x, 1*x, 1 scale <0.10, 0.11, 0.11> }		cylinder { -2*x, 2*x, 1 scale <0.10, 0.10, 0.10> }		texture { My_Brass_4A }	}	cylinder { -1*x, 1*x, 1 scale <0.06, 0.1, 0.1> texture { My_Eye } } };#macro Thermometer(fraction)union {	box { <-1, 0, -1>, 1 scale <0.01, 2.0, 0.2> texture { My_Brass_4A } }	box { <-1, 0, -1>, 1 scale <0.02, 1.9, 0.1> pigment { color White } }	difference{		cylinder { 0, 1*y, 1 scale <0.1, 2, 0.1> translate <0.1, 0.01, 0> }		cylinder { 0, 1*y, 1 scale <0.09, 2, 0.09> translate <0.1, 0.01, 0> }		texture {			gradient y			scale 0.2			texture_map {				[0.0 My_Black] 				[0.1 My_Glass]			}		}		interior { I_Glass } 		}	cylinder { 0, 1*y, 1 scale <0.08, 2 * fraction, 0.08> translate <0.1, 0.1, 0> pigment { color rgbt <1, 0, 0, 0.4> } }	cylinder { 0, 1*y, 1 scale <0.15, 0.1, 0.15> translate <0.1, 0.0, 0> texture { My_Brass_4A } }	cylinder { -1*y, 0, 1 scale <0.15, 0.1, 0.15> translate <0.1, 2.0, 0> texture { My_Brass_4A } }}#end#declare Eye = union {	cylinder { <0.9, 0, 0>, <-0.2, 0, 0>, 0.19 texture { My_BumpBrass_4A } } 	cylinder { <0.91, 0, 0>, <0.5, 0, 0>, 0.17 texture { My_Rubber } } 	sphere { <0.92, 0, 0>, 0.15 texture { My_Eye } }};// /////////////////////////////////////////// BODY#declare Body = union {	//torso	cylinder { <0, 5.6, 0>, <0, 6.8, 0>, 0.45 texture { My_BumpBrass_4A } } // pelvis	cylinder { <0, 6, -0.49>, <0, 6, 0.49>, 0.2 pigment { red 0.1 blue 0.1 green 0.1 } } // rubber gasket		box { <-1, 0, -1>, <1, 1, 1> scale <0.6, 4.4, 1> translate <0.1, 6.6, 0> texture { My_BumpBlack } } // abdomen	cylinder { 0, 1*y, 1 scale <0.05, 4.4, 0.05> translate < 0.7, 6.6,  1> texture { My_Wood5 rotate 90*y rotate 90*x} } // piping	cylinder { 0, 1*y, 1 scale <0.05, 4.4, 0.05> translate < 0.7, 6.6, -1> texture { My_Wood5 rotate 90*y rotate 90*x} } // piping	cylinder { 0, 1*y, 1 scale <0.05, 4.4, 0.05> translate <-0.5, 6.6,  1> texture { My_Wood5 rotate 90*y rotate 90*x} } // piping	cylinder { 0, 1*y, 1 scale <0.05, 4.4, 0.05> translate <-0.5, 6.6, -1> texture { My_Wood5 rotate 90*y rotate 90*x} } // piping		object { Gauge(23) scale 0.5 translate <0.7,  8.3, 0.5> }	object { Gauge(46) scale 0.5 translate <0.7,  8.9, 0.5> }	object { Gauge(-25) scale 0.5 translate <0.7,  9.5, 0.5> }	object { Gauge(3) scale 0.5 translate <0.7, 10.1, 0.5> }	object { Thermometer(0.2) scale 0.5 translate <0.7, 9.3, -0.60> }	object { Thermometer(0.7) scale 0.5 translate <0.7, 9.3, -0.30> }	object { Button translate <0.7, 6.9, -0.5> }	cylinder { -1*z, z, 0.5 scale <1, 1, 1.30> translate <0, 10.5, 0> texture { My_BumpBrass_4A } } // shoulders	cylinder { -1*z, z, 0.2 scale <1, 1, 1.31> translate <0, 10.5, 0> texture { My_Rubber } } // shoulders	object { Tank(2.5, 0.25) translate <    0,   7,  1> }	object { Tank(2.5, 0.25) translate <    0,   7, -1> }	object { Tank(2.0, 0.50) translate <-0.75, 7.5,  0> }	// head	cylinder {0, 1.2*y, 0.5 translate <0, 11.4, 0> texture { My_BumpBlack } } 	// neck	cylinder {0, 0.5*y, 0.3 translate <0, 11.0, 0> texture { My_BumpBrass_4A } }	//eyes	object { Eye translate <-0.3, 12.4, 0.35> }	object { Eye translate <-0.3, 12.4, -0.35> }};// /////////////////////////////////////////// BODY2#declare Body2 = union {	box { <-1, 0, -1>, <1, 1, 1> scale <0.7, 3.5, 0.7> translate <0.0, 7.0, 0> texture { My_BumpRed } } // abdomen	box { <-1, 0, -1>, <1, 1, 1> scale <0.7, 1.0, 0.5> translate <0.0, 6.0, 0.0> texture { My_BumpRed } } // pelvis	cylinder { 0, 1*y, 1 scale <0.05, 3.5, 0.05> translate < 0.7, 7.0,  0.7> texture { My_BumpBlack rotate 90*y rotate 90*x} } // piping	cylinder { 0, 1*y, 1 scale <0.05, 3.5, 0.05> translate < 0.7, 7.0, -0.7> texture { My_BumpBlack rotate 90*y rotate 90*x} } // piping	cylinder { 0, 1*y, 1 scale <0.05, 3.5, 0.05> translate <-0.7, 7.0,  0.7> texture { My_BumpBlack rotate 90*y rotate 90*x} } // piping	cylinder { 0, 1*y, 1 scale <0.05, 3.5, 0.05> translate <-0.7, 7.0, -0.7> texture { My_BumpBlack rotate 90*y rotate 90*x} } // piping	cylinder { <0.0,  7.0,  0.5>, <0.0, 10.5,  0.5>, 0.7 texture { My_Brass_4B } }	// sides	cylinder { <0.0,  7.0, -0.5>, <0.0, 10.5, -0.5>, 0.7 texture { My_Brass_4B } }	// sides	cylinder { <0.0, 10.5, -1.4>, <0.0, 10.5,  1.4>, 0.7 texture { My_BumpRed } } // shoulders	object { Gauge(23) scale 0.5 translate <0.7,  8.1, 0.3> }	object { Gauge(46) scale 0.5 translate <0.7,  8.7, 0.3> }	object { Gauge(-25) scale 0.5 translate <0.7,  9.3, 0.3> }	object { Gauge(3) scale 0.5 translate <0.7, 9.9, 0.3> }	object { Thermometer(0.2) scale 0.5 translate <0.7, 9.1, -0.40> }	object { Thermometer(0.7) scale 0.5 translate <0.7, 9.1, -0.10> }	object { Button translate <0.7, 7.1, -0.4> }	// head	cylinder {0, 1.5*y, 0.70 translate <0, 11.6, 0> texture { My_BumpBlack } } 	// neck	cylinder {0, 0.7*y, 0.4 translate <0, 11.0, 0> texture { My_Brass_4B } }	//eyes	object { Eye translate <-0.2, 12.6, 0.37> }	object { Eye translate <-0.2, 12.6, -0.37> }};// //////////////////////////////// FIRST ROBOT#macro Robot(left_shoulder_theta, left_elbo_theta, left_hip_theta, left_knee_theta, right_shoulder_theta, right_elbo_theta, right_hip_theta, right_knee_theta)union {	object { #Leg2(left_knee_theta, -z) rotate left_hip_theta*z translate <0, 6, -1> }	object { #Leg2(right_knee_theta, z) rotate right_hip_theta*z translate <0, 6, 1> }	//object { LimbMount rotate right_hip_theta*z translate <0, 6, 0.42> }	object { #Arm2(right_elbo_theta, z) rotate right_shoulder_theta*z translate <0, 10.5, 1.7> }	object { LimbMount rotate right_shoulder_theta*z translate <0, 10.5, 1> }	object { #Arm2(left_elbo_theta, -z) rotate left_shoulder_theta*z translate <0, 10.5, -1.7> }	object { LimbMount rotate left_shoulder_theta*z translate <0, 10.5, -1> }	object { Body2 }}#end#macro Army(radius1, radius2)#declare robotRow = -radius1;#while (robotRow < radius1)	#declare robotColumn = -radius2;	#while (robotColumn < radius2)		#local rndDisplace = VRand_In_Box(<-1,0,-1>, <1, 0, 1>, RdmA);		object {			#Robot(10*SRand(RdmA),10+10*SRand(RdmA),0,0,10*SRand(RdmA),10+10*SRand(RdmA),0,0)			rotate SRand(RdmA)*40*y			translate rndDisplace + <robotRow, 0, robotColumn>		}		#declare robotColumn=robotColumn + 11;		#end	#declare robotRow=robotRow + 8;	#end#end